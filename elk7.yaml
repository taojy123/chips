apiVersion: v1
items:
- apiVersion: v1
  data:
    logstash.conf: |-
      input {
        redis {
          host => "redis"
          port => 6379
          data_type => "list"
          db => "2"
          batch_count => "1"
          key => "filebeat"
        }
      }


      filter {

      }


      output {
        elasticsearch {
          hosts => ["http://elasticsearch.elk:9200"]
          index => "k8s-%{+YYYY.MM.dd}"
        }
      }
  kind: ConfigMap
  metadata:
    annotations:
      field.cattle.io/creatorId: user-pqsxq
    creationTimestamp: 2019-05-27T05:29:14Z
    labels:
      cattle.io/creator: norman
    name: logstash-config
    namespace: elk
    resourceVersion: "1464756"
    selfLink: /api/v1/namespaces/elk/configmaps/logstash-config
    uid: 5d6d1490-8040-11e9-a691-005056b887a4
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    annotations:
      field.cattle.io/creatorId: user-pqsxq
      field.cattle.io/publicEndpoints: '[{"addresses":["172.23.43.15"],"port":30920,"protocol":"TCP","serviceName":"elk:elasticsearch-nodeport","allNodes":true},{"addresses":["172.23.43.15"],"port":31404,"protocol":"TCP","serviceName":"elk:elasticsearch-nodeport","allNodes":true}]'
    creationTimestamp: 2019-05-27T03:33:45Z
    generation: 1
    labels:
      cattle.io/creator: norman
      workload.user.cattle.io/workloadselector: statefulSet-elk-elasticsearch
    name: elasticsearch
    namespace: elk
    resourceVersion: "1437974"
    selfLink: /apis/apps/v1beta1/namespaces/elk/statefulsets/elasticsearch
    uid: 3b8c1416-8030-11e9-a691-005056b887a4
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: statefulSet-elk-elasticsearch
    serviceName: elasticsearch
    template:
      metadata:
        annotations:
          cattle.io/timestamp: 2019-05-27T03:33:47Z
          field.cattle.io/ports: '[[{"containerPort":9200,"dnsName":"elasticsearch-nodeport","kind":"NodePort","name":"9200tcp309201","protocol":"TCP","sourcePort":30920},{"containerPort":9300,"dnsName":"elasticsearch-nodeport","kind":"NodePort","name":"9300tcp01","protocol":"TCP","sourcePort":0}]]'
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: statefulSet-elk-elasticsearch
      spec:
        containers:
        - env:
          - name: cluster.initial_master_nodes
            value: elasticsearch
          - name: cluster.name
            value: elk-cluster
          - name: discovery.seed_hosts
            value: elasticsearch
          - name: node.name
            value: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
          imagePullPolicy: Always
          name: elasticsearch
          ports:
          - containerPort: 9200
            name: 9200tcp309201
            protocol: TCP
          - containerPort: 9300
            name: 9300tcp01
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: elasticsearch-949c7966f
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: elasticsearch-949c7966f
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    annotations:
      field.cattle.io/creatorId: user-pqsxq
    creationTimestamp: 2019-05-27T03:34:40Z
    generation: 1
    labels:
      cattle.io/creator: norman
      workload.user.cattle.io/workloadselector: statefulSet-elk-es
    name: es
    namespace: elk
    resourceVersion: "1438174"
    selfLink: /apis/apps/v1beta1/namespaces/elk/statefulsets/es
    uid: 5be9bfb8-8030-11e9-a691-005056b887a4
  spec:
    podManagementPolicy: OrderedReady
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: statefulSet-elk-es
    serviceName: elasticsearch
    template:
      metadata:
        annotations:
          cattle.io/timestamp: 2019-05-27T03:34:42Z
          field.cattle.io/ports: '[null]'
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: statefulSet-elk-es
      spec:
        containers:
        - env:
          - name: cluster.initial_master_nodes
            value: elasticsearch
          - name: cluster.name
            value: elk-cluster
          - name: discovery.seed_hosts
            value: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.1.0
          imagePullPolicy: Always
          name: es
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 4
    currentRevision: es-7998fc5c9d
    observedGeneration: 1
    readyReplicas: 4
    replicas: 4
    updateRevision: es-7998fc5c9d
    updatedReplicas: 4
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    annotations:
      field.cattle.io/creatorId: user-pqsxq
    creationTimestamp: 2019-05-27T05:15:37Z
    generation: 19
    labels:
      cattle.io/creator: norman
      workload.user.cattle.io/workloadselector: statefulSet-elk-logstash
    name: logstash
    namespace: elk
    resourceVersion: "1464965"
    selfLink: /apis/apps/v1beta1/namespaces/elk/statefulsets/logstash
    uid: 768f8164-803e-11e9-a691-005056b887a4
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: statefulSet-elk-logstash
    serviceName: logstash
    template:
      metadata:
        annotations:
          cattle.io/timestamp: 2019-05-27T07:34:11Z
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: statefulSet-elk-logstash
      spec:
        containers:
        - args:
          - -f
          - /etc/logstash.conf
          - -e
          image: docker.elastic.co/logstash/logstash:7.1.0
          imagePullPolicy: Always
          name: logstash
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /etc/logstash.conf
            name: config
            subPath: logstash.conf
        dnsConfig: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 511
            name: logstash-config
            optional: false
          name: config
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: logstash-cc57fcbbc
    observedGeneration: 19
    readyReplicas: 1
    replicas: 1
    updateRevision: logstash-cc57fcbbc
    updatedReplicas: 1
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    annotations:
      field.cattle.io/creatorId: user-pqsxq
      field.cattle.io/publicEndpoints: '[{"addresses":["172.23.43.15"],"port":32718,"protocol":"TCP","serviceName":"elk:redis-nodeport","allNodes":true}]'
    creationTimestamp: 2019-05-27T03:43:35Z
    generation: 1
    labels:
      cattle.io/creator: norman
      workload.user.cattle.io/workloadselector: statefulSet-elk-redis
    name: redis
    namespace: elk
    resourceVersion: "1439227"
    selfLink: /apis/apps/v1beta1/namespaces/elk/statefulsets/redis
    uid: 9adff3d3-8031-11e9-a691-005056b887a4
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: statefulSet-elk-redis
    serviceName: redis
    template:
      metadata:
        annotations:
          cattle.io/timestamp: 2019-05-27T03:43:37Z
          field.cattle.io/ports: '[[{"containerPort":6379,"dnsName":"redis-nodeport","kind":"NodePort","name":"6379tcp01","protocol":"TCP","sourcePort":0}]]'
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: statefulSet-elk-redis
      spec:
        containers:
        - image: redis:latest
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            name: 6379tcp01
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      type: RollingUpdate
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: redis-66578bc8cf
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: redis-66578bc8cf
    updatedReplicas: 1
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      field.cattle.io/creatorId: user-pqsxq
      field.cattle.io/publicEndpoints: '[{"addresses":["172.23.43.15"],"port":30561,"protocol":"TCP","serviceName":"elk:kibana-nodeport","allNodes":true}]'
    creationTimestamp: 2019-05-27T03:36:43Z
    generation: 2
    labels:
      cattle.io/creator: norman
      workload.user.cattle.io/workloadselector: deployment-elk-kibana
    name: kibana
    namespace: elk
    resourceVersion: "1438384"
    selfLink: /apis/extensions/v1beta1/namespaces/elk/deployments/kibana
    uid: a5bed9d0-8030-11e9-a691-005056b887a4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-elk-kibana
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cattle.io/timestamp: 2019-05-27T03:36:46Z
          field.cattle.io/ports: '[[{"containerPort":5601,"dnsName":"kibana-nodeport","kind":"NodePort","name":"5601tcp305611","protocol":"TCP","sourcePort":30561}]]'
        creationTimestamp: null
        labels:
          workload.user.cattle.io/workloadselector: deployment-elk-kibana
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch:9200
          image: docker.elastic.co/kibana/kibana:7.1.0
          imagePullPolicy: Always
          name: kibana
          ports:
          - containerPort: 5601
            name: 5601tcp305611
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: 2019-05-27T03:36:48Z
      lastUpdateTime: 2019-05-27T03:36:48Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2019-05-27T03:36:43Z
      lastUpdateTime: 2019-05-27T03:36:48Z
      message: ReplicaSet "kibana-577967b589" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
